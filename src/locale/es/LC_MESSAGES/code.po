# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018, Agencia de Implementaci√≥n
# This file is distributed under the same license as the ladm_a_docs
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: ladm_a_docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-04-10 14:13-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.3\n"

#: ../../code.rst:2
msgid "Documentation for the Code"
msgstr ""

#: of testpypkg:1
msgid "A pypi demonstration vehicle."
msgstr ""

#: ../../code.rst:8
msgid "Modulo test1 -- auto members"
msgstr ""

#: ../../code.rst:10 ../../code.rst:18
msgid "This is something I want to say that is not in the docstring."
msgstr ""

#: of testpypkg.module2.MyPublicClass:1 testpypkg.test1.MyPublicClass:1
msgid "We use this as a public class example class."
msgstr ""

#: of testpypkg.module2.MyPublicClass:3 testpypkg.test1.MyPublicClass:3
msgid ""
"You never call this class before calling "
":func:`public_fn_with_sphinxy_docstring`."
msgstr ""

#: of testpypkg.module2.MyPublicClass:7 testpypkg.test1.MyPublicClass:7
msgid ""
"An example of intersphinx is this: you **cannot** use :mod:`pickle` on "
"this class."
msgstr ""

#: of testpypkg.module2.MyPublicClass.get_foobar:1
#: testpypkg.test1.MyPublicClass.get_foobar:1
msgid "This gets the foobar"
msgstr ""

#: of testpypkg.module2.MyPublicClass._get_baz:3
#: testpypkg.module2.MyPublicClass.get_foobar:3
#: testpypkg.test1.MyPublicClass.get_foobar:3
msgid "This really should have a full function definition, but I am too lazy."
msgstr ""

#: of testpypkg.module2.MyPublicClass.get_foobar:10
#: testpypkg.test1.MyPublicClass.get_foobar:10
msgid "Isn't that what you want?"
msgstr ""

#: of testpypkg.module2.public_fn_with_sphinxy_docstring:1
#: testpypkg.test1.public_fn_with_googley_docstring:1
#: testpypkg.test1.public_fn_with_sphinxy_docstring:1
msgid "This function does something."
msgstr ""

#: of testpypkg.test1.public_fn_with_googley_docstring:4
msgid "Args:"
msgstr ""

#: of testpypkg.test1.public_fn_with_googley_docstring:4
msgid "name (str):  The name to use."
msgstr ""

#: of testpypkg.test1.public_fn_with_googley_docstring:7
msgid "Kwargs:"
msgstr ""

#: of testpypkg.test1.public_fn_with_googley_docstring:7
msgid "state (bool): Current state to be in."
msgstr ""

#: of testpypkg.test1.public_fn_with_googley_docstring:14
msgid "Returns:"
msgstr ""

#: of testpypkg.test1.public_fn_with_googley_docstring:10
msgid "int.  The return code::"
msgstr ""

#: of testpypkg.test1.public_fn_with_googley_docstring:17
msgid "Raises:"
msgstr ""

#: of testpypkg.module2.public_fn_with_sphinxy_docstring:8
#: testpypkg.test1.public_fn_with_googley_docstring:17
#: testpypkg.test1.public_fn_with_sphinxy_docstring:8
msgid "AttributeError, KeyError"
msgstr ""

#: of testpypkg.test1.public_fn_with_googley_docstring:19
msgid "A really great idea.  A way you might use me is"
msgstr ""

#: of testpypkg.test1.public_fn_with_googley_docstring:24
msgid "BTW, this always returns 0.  **NEVER** use with :class:`MyPublicClass`."
msgstr ""

#: of testpypkg.module2.public_fn_with_sphinxy_docstring
#: testpypkg.test1.public_fn_with_sphinxy_docstring
msgid "Parameters"
msgstr ""

#: of testpypkg.module2.public_fn_with_sphinxy_docstring:3
#: testpypkg.test1.public_fn_with_sphinxy_docstring:3
msgid "The name to use."
msgstr ""

#: of testpypkg.module2.public_fn_with_sphinxy_docstring:5
#: testpypkg.test1.public_fn_with_sphinxy_docstring:5
msgid "Current state to be in."
msgstr ""

#: of testpypkg.module2.public_fn_with_sphinxy_docstring
#: testpypkg.test1.public_fn_with_sphinxy_docstring
msgid "Returns"
msgstr ""

#: of testpypkg.module2.public_fn_with_sphinxy_docstring:7
#: testpypkg.test1.public_fn_with_sphinxy_docstring:7
msgid "int -- the return code."
msgstr ""

#: of testpypkg.module2.public_fn_with_sphinxy_docstring
#: testpypkg.test1.public_fn_with_sphinxy_docstring
msgid "raises"
msgstr ""

#: ../../code.rst:16
msgid "module2 -- explicit members"
msgstr ""

#: of testpypkg.module2._private_fn_with_docstring:1
msgid "I have a docstring, but won't be imported if you just use ``:members:``."
msgstr ""

#: of testpypkg.module2.public_fn_without_docstring:1
msgid "It works!!!"
msgstr ""

#: of testpypkg.module2.MyPublicClass._get_baz:1
msgid "A private function to get baz."
msgstr ""

